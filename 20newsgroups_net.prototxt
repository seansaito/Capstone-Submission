name: "net"
layers {
        name: "data"
        type: DATA
        top: "data"
        data_param {
            seek: '00000000'
            source: "20newsgroups_total"
            backend: LEVELDB
            batch_size: 256
        }
        transform_param {
            scale: 1.0
        }
        include: { phase: TRAIN }
    }
    layers {
        name: "data"
        type: DATA
        top: "data"
        data_param {
            seek: '00000000'
            source: "20newsgroups_total"
            backend: LEVELDB
            batch_size: 100
        }
        transform_param {
            scale: 1.0
        }
        include: { phase: TEST }
    }
    layers {
        name: "label"
        type: DATA
        top: "label"
        data_param {
            seek: '00000000'
            source: "train_weight"
            backend: LEVELDB
            batch_size: 256
        }
        transform_param {
            scale: 1.0
        }
        include: { phase: TRAIN }
    }
    layers {
        name: "label"
        type: DATA
        top: "label"
        data_param {
            seek: '00000000'
            source: "train_weight"
            backend: LEVELDB
            batch_size: 100
        }
        transform_param {
            scale: 1.0
        }
        include: { phase: TEST }
    }
    layers {
      name: "inner1"
      type: INNER_PRODUCT
      bottom: "data"
      top: "inner1"
      blobs_lr: 1
      blobs_lr: 2
      weight_decay: 1
      weight_decay: 0
      inner_product_param {
        num_output: 500
        weight_filler {
          type: "gaussian"
          std: 0.05
        }
        bias_filler {
          type: "constant"
          value: 0
        }
      }
    }
    layers {
      name: "inner1relu"
      type: RELU
      bottom: "inner1"
      top: "inner1"
    }
    layers {
      name: "inner2"
      type: INNER_PRODUCT
      bottom: "inner1"
      top: "inner2"
      blobs_lr: 1
      blobs_lr: 2
      weight_decay: 1
      weight_decay: 0
      inner_product_param {
        num_output: 500
        weight_filler {
          type: "gaussian"
          std: 0.05
        }
        bias_filler {
          type: "constant"
          value: 0
        }
      }
    }
    layers {
      name: "inner2relu"
      type: RELU
      bottom: "inner2"
      top: "inner2"
    }
    layers {
      name: "inner3"
      type: INNER_PRODUCT
      bottom: "inner2"
      top: "inner3"
      blobs_lr: 1
      blobs_lr: 2
      weight_decay: 1
      weight_decay: 0
      inner_product_param {
        num_output: 1000
        weight_filler {
          type: "gaussian"
          std: 0.05
        }
        bias_filler {
          type: "constant"
          value: 0
        }
      }
    }
    layers {
      name: "inner3relu"
      type: RELU
      bottom: "inner3"
      top: "inner3"
    }
    layers {
      name: "inner4"
      type: INNER_PRODUCT
      bottom: "inner3"
      top: "inner4"
      blobs_lr: 1
      blobs_lr: 2
      weight_decay: 1
      weight_decay: 0
      inner_product_param {
        num_output: 2000
        weight_filler {
          type: "gaussian"
          std: 0.05
        }
        bias_filler {
          type: "constant"
          value: 0
        }
      }
    }
    layers {
      name: "inner4relu"
      type: RELU
      bottom: "inner4"
      top: "inner4"
    }
    layers {
      name: "output"
      type: INNER_PRODUCT
      bottom: "inner4"
      top: "output"
      blobs_lr: 1
      blobs_lr: 2
      weight_decay: 1
      weight_decay: 0
      inner_product_param {
        num_output: 10
        weight_filler {
          type: "gaussian"
          std: 0.05
        }
        bias_filler {
          type: "constant"
          value: 0
        }
      }
    }
    layers {
      name: "loss"
      type: MULTI_T_LOSS
      bottom: "output"
      bottom: "label"
      blobs_lr: 1.
      blobs_lr: 0.
      blobs_lr: 0.
      top: "loss"
      top: "std"
      top: "ind"
      top: "proba"
      multi_t_loss_param {
        num_center: 14
        alpha: 1
        lambda: 2
        beta: 1
        bandwidth: 0.1
        weight_filler {
          type: 'gaussian'
          std: 0.5
        }
      }
    }
    layers {
      name: "silence"
      type: SILENCE
      bottom: "label"
      bottom: "ind"
      bottom: "proba"
    }
    